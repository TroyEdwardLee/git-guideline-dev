{
  "UI5 Controller": {
    "prefix": "ui5-vc",
    "body": [
      "sap.ui.define(",
      "  [",
      "    'sap/ems/ui/app/${1:template}/common/BaseController',",
      "    'sap/ui/model/json/JSONModel'",
      "  ],",
      "  function(BaseController, JSONModel) {",
      "    'use strict';",
      "",
      "    return BaseController.extend(",
      "      'sap.ems.ui.app.${1:template}.controller.${0:$TM_FILENAME_BASE}',",
      "      {",
      "        /**",
      "         * Called when a controller is instantiated and its View controls (if available) are already created.",
      "         * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.",
      "         * @memberOf sap.ems.ui.app.${1:template}.view.${0:$TM_FILENAME_BASE}",
      "         */",
      "        onInit: function() {",
      "          BaseController.prototype.onInit.apply(this, arguments);",
      "          this.getRouter()",
      "            .getRoute('order')",
      "            .attachMatched(this.onRouteMatched, this);",
      "        },",
      "        onRouteMatched: function(oEvent) {",
      "          this.setModel(new JSONModel({}));",
      "        }",
      "        /**",
      "         * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered",
      "         * (NOT before the first rendering! onInit() is used for that one!).",
      "         * @memberOf sap.ems.ui.app.${1:template}.view.${0:$TM_FILENAME_BASE}",
      "         */",
      "        //   onBeforeRendering: function() {},",
      "",
      "        /**",
      "         * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.",
      "         * This hook is the same one that SAPUI5 controls get after being rendered.",
      "         * @memberOf sap.ems.ui.app.${1:template}.view.${0:$TM_FILENAME_BASE}",
      "         */",
      "        //   onAfterRendering: function() {},",
      "",
      "        /**",
      "         * Called when the Controller is destroyed. Use this one to free resources and finalize activities.",
      "         * @memberOf sap.ems.ui.app.${1:template}.view.${0:$TM_FILENAME_BASE}",
      "         */",
      "        //   onExit: function() {}",
      "        /**",
      "         * view-event-handler name pattern: handle[Name][Control Name][Event Name]",
      "         */",
      "        //   handleSaveButtonPress: function(oEvent) {}",
      "      }",
      "    );",
      "  }",
      ");",
      ""
    ],
    "description": "UI5 Controller"
  },
  "UI5 OPA Page": {
    "prefix": "ui5-opa-page",
    "body": [
      "sap.ui.define(['sap/ui/test/Opa5', 'sap/ui/test/actions/Press'], function(",
      "  Opa5,",
      "  Press",
      ") {",
      "  'use strict';",
      "",
      "  Opa5.createPageObjects({",
      "    onThe${1:App}Page: {",
      "      actions: {",
      "        i${2:DoMyAction}: function() {",
      "          return this.waitFor({",
      "            id: 'controlId',",
      "            viewName: '${4:sViewName}',",
      "            actions: new Press(),",
      "            errorMessage:",
      "              'Was not able to find the control with the id controlId'",
      "          });",
      "        }",
      "      },",
      "      assertions: {",
      "        iShould${3:DoMyAssertion}: function() {",
      "          return this.waitFor({",
      "            id: 'controlId2',",
      "            viewName: '${4:sViewName}',",
      "            success: function() {",
      "              Opa5.assert.ok(false, 'Implement me');",
      "            },",
      "            errorMessage:",
      "              'Was not able to find the control with the id controlId2'",
      "          });",
      "        }",
      "      }",
      "    }",
      "  });",
      "});",
      ""
    ],
    "description": "UI5 OPA Page"
  },
  "UI5 OPA Journey": {
    "prefix": "ui5-opa-journey",
    "body": [
      "sap.ui.define(",
      "  [",
      "    'sap/ui/test/opaQunit',",
      "    //Pages",
      "    'sap/ems/test/lib/integration/pages/Browser',",
      "    'sap/ems/test/lib/integration/pages/NotFound',",
      "    '../pages/App'",
      "  ],",
      "  function(opaTest) {",
      "    'use strict';",
      "",
      "    QUnit.module('Module Name');",
      "",
      "    opaTest('Should assertion descrition when actions description ', function(",
      "      Given,",
      "      When,",
      "      Then",
      "    ) {",
      "      //Arrangements",
      "      Given.iStartTheApp();",
      "",
      "      //Actions",
      "      When.iLookAtTheScreen();",
      "      When.onMyPageUnderTest.iDoMyAction();",
      "      When.onTheBrowser.iPressOnTheBackwardsButton();",
      "",
      "      //Assertions",
      "      Then.onMyPageUnderTest",
      "        .iShouldDoMyAssertion()",
      "        .and.iTeardownMyUIComponent();",
      "    });",
      "  }",
      ");",
      ""
    ],
    "description": "UI5 OPA Journey"
  },
  "UI5 QUnit Test": {
    "prefix": "ui5-unit-test",
    "body": [
      "sap.ui.define(",
      "  [",
      "    'sap/ui/model/resource/ResourceModel',",
      "    '../../../controller/App.controller',",
      "    'sap/ui/thirdparty/sinon',",
      "    'sap/ui/thirdparty/sinon-qunit'",
      "  ],",
      "  function(ResourceModel) {",
      "    'use strict';",
      "",
      "    QUnit.module('Module Name', {",
      "      beforeEach: function() {",
      "        // prepare something before each test",
      "      },",
      "",
      "      afterEach: function() {",
      "        // clean up after each test",
      "      }",
      "    });",
      "",
      "    QUnit.test('Should Test Description', function(assert) {",
      "      // Arrange",
      "",
      "      // Act",
      "",
      "      // Unit under test",
      "",
      "      // Assert",
      "      assert.ok(false, 'Implement me');",
      "    });",
      "  }",
      ");",
      ""
    ],
    "description": "UI5 QUnit Test"
  },
  "UI5 Class": {
    "prefix": "ui5-class",
    "body": [
      "sap.ui.define(['sap/ui/base/Object'], function(BaseObject) {",
      "  'use strict';",
      "  /**",
      "   * Class",
      "   *",
      "   * @class ${1:$TM_FILENAME_BASE}",
      "   *",
      "   * @extends sap.ui.base.Object",
      "   *",
      "   * @author SAP CD CSC",
      "   * @since 1.0.0",
      "   *",
      "   * @constructor",
      "   * @public",
      "   * @alias sap.ems.ui.app.${0:template}.common.${1:$TM_FILENAME_BASE}",
      "   */",
      "",
      "  return BaseObject.extend(",
      "    'sap.ems.ui.app.${0:template}.common.${1:$TM_FILENAME_BASE}',",
      "    {",
      "      constructor: function() {",
      "        BaseObject.apply(this, arguments);",
      "      }",
      "    }",
      "  );",
      "});",
      ""
    ],
    "description": "UI5 Class"
  },
  "UI5 Static Class": {
    "prefix": "ui5-class-static",
    "body": [
      "sap.ui.define(['sap/ui/base/Object'], function(BaseObject) {",
      "  'use strict';",
      "",
      "  /**",
      "   * Static class",
      "   *",
      "   * @class ${1:$TM_FILENAME_BASE}",
      "   *",
      "   * @extends sap.ui.base.Object",
      "   *",
      "   * @author SAP CD CSC",
      "   * @since 1.0.0",
      "   *",
      "   * @constructor",
      "   * @public",
      "   * @alias sap.ems.ui.app.${0:template}.common.${1:$TM_FILENAME_BASE}",
      "   */",
      "  var o${1:$TM_FILENAME_BASE} = BaseObject.extend(",
      "    'sap.ems.ui.app.${0:template}.common.${1:$TM_FILENAME_BASE}'",
      "  );",
      "",
      "  return o${1:$TM_FILENAME_BASE};",
      "});",
      ""
    ],
    "description": "UI5 Static Class"
  }
}
